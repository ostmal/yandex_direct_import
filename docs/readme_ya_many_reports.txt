*** Скрипт для импорта данных из Яндекс-Директ по 8 стандартным отчетам ***

Файлы запуска: 
get_goals_from_YM.py
ya_many_reports.py

config.yml - файл конфигурации
credential_bd.yml - параметры доступа к базе данных

1. get_goals_from_YM.py
Скрипт считывает список целей из Яндекс-Метрики
Он запрашиваент токен и номер счетчика к Яндекс-Метрике.
Далее отображает этот список на экран.
Проверяет - есть список целей в БД - напротив аккаунта Яндекс-Директ.
При согласии пользователя записывает этот список в БД

2. ya_many_reports.py
Скрипт в диалоговом ражиме формирует запрос к Яндекс-Директ, результаты запроса записывает в соответствующую таблицу
Система запрашивает следующее:
- Аккаунт: (предлагает список аккаунтов, которые есть в БД)
- ReportType: (один из 8, которые есть в ЯД)
- DateRangeType: Диапазон дат (если CUSTOM_DATE - выбираем конкретные даты)
- DateFrom: 
- DateTo: 
- FieldNames - список полей в разбивке по типу (сегменты, атрибуты, метрики):
- Filters: {"Field": "Clicks","Operator": "GREATER_THAN","Values": ["0"]}
- Goals: Цели. Если есть список целей в таблице аккаунтов - он выводится. 
Необходимо выбрнать ТРИ цели из предложенных в соответствующем порядке: 1:добавление в корзину,   2:переход в корзину,   3:покупка
Если списка целей нет - его можно ввести вручную, но тоже с указанием порядка
Дажн если выводится готовый список целей, но требуется ввести цель - отличную от списка можно это сделать, но перед перечнем записать слово "manual"
- AttributionModels:  Через запятую записываем модели атрибуции (по умолчанию - LYDC). Внимание! Система последовательно (не одновременно) делает запросы по КАЖДОЙ модели атрибуции.

Нюансы взаимодействия с пользователем:
- DateRangeType:
	Если задаем «CUSTOM_DATE» - необходимо заполнять «DateFrom»-« DateTo»
- FieldNames - ввод полей:
•	Подтвердить то, что параметр остается без изменения (enter)
•	Полностью изменить параметр (числа через запятую)
•	Задать пустое значение параметра (null)
•	Добавить значение параметра (+)
•	Удалить значение параметра (-)
•	(Все предыдущие действия можно повторять многократно)
•	отработаны ситуации «Несовместимые поля» (https://yandex.ru/dev/direct/doc/reports/compatibility.html) (выводится предупреждение)
•	В таблице будут ВСЕ ВОЗМОЖНЫЕ поля для данного типа отчета, но данные будут писаться ТОЛЬКО в выбранные поля !
- Filters - фильтрация данных (https://yandex.ru/dev/direct/doc/reports/filters.html). Заносится без квадратных скобок.

Нюансы построкния итоговой таблицы:
- Существуют 5 "волшебных" полей:['ConversionRate', 'Conversions', 'CostPerConversion', 'GoalsRoi', 'Revenue']. Если указана одна цель, то они в итоге запроса имеют вид:
[ИмяПоля]_[НомерЦели]_[МодельАтрибуции]. В итоговой таблице на каждое такое поле есть ТРИ, вида: [ИмяПоля]_1, ... И результаты по целям раскидываются в эти поля. 
Кроме того, в поле "attributionmodels" - пишется модель атрибуции. Если в запросе не указана ни одна цель - то "волшебные" поля после запроса остаются без изменений,
но в скрипте они переименовываются в [ИмяПоля]_1, а в поле "attributionmodels" - нет данных

После удачного выполнения запроса система записывает результаты запроса в итоговую таблицу и параметры хапроса в БД. 
Под каждый тип запроса строится отдельная таблица, которая включает все возможные поля в этом типе запроса.
Если в последующем формируем запрос на основании этого же аккаунта и этого же типа запрса - система предлагает параметры последнего запроса.


